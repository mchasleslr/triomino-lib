name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install valgrind
        run: sudo apt-get install valgrind

      - name: Install lcov
        run: sudo apt-get install lcov

      - name: Install Cmake
        run: sudo apt-get install cmake

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DBUILD_TESTS=ON -DBUILD_COVERAGE=1

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: make

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: make test

      - name: Coverage
        working-directory: ${{github.workspace}}/build
        run: make coverage

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{secrets.COVERALLS_TOKEN}}
          file: ${{github.workspace}}/build/coverage.info
